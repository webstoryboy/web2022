[
    {
        "subject": "소프트웨어 설계",
        "question": "요구사항 검증(Requirements Validation)과 관련한 설명으로 틀린 것은?",
        "correct_answer": "요구사항 검증 과정을 통해 모든 요구사항 문제를 발견 할 수 있다.",
        "incorrect_answers": ["요구사항이 고객이 정말 원하는 시스템을 제대로 정의하고 있는지 점검하는 과정이다.","개발완료 이후에 문제점이 발견될 경우 막대한 재작업 비용이 들 수 있기 때문에 요구사항 검증은 매우 중요하다.","요구사항이 실제 요구를 반영하는지, 문서상의 요구사항은 서로 상충되지 않는지 등을 점검한다."]
    },{
        "subject": "소프트웨어 설계",
        "question": "UML 모델에서 한 사물의 명세가 바뀌면 다른사물에 영향을 주며, 일반적으로 한 클래스가다른 클래스를 오퍼레이션의 매개변수로 사용하는 경우에 나타나는 관계는?",
        "correct_answer": "Dependency",
        "incorrect_answers": ["Association","Realization","Generalization"],
        "desc": "연관 관계(Association Relationship), 의존 관계(Dependency Relationship), 실체화 관계(Realization Relationship), 일반화 관계(Generalization Relationship)"
    },{
        "subject": "소프트웨어 설계",
        "question": "익스트림 프로그래밍 (XP)에 대한 설명으로 틀린 것은?",
        "correct_answer": "빠른 개발을 위해 테스트를 수행하지 않는다.",
        "incorrect_answers": ["사용자의 요구사항은 언제든지 변할 수있다.","고객과 직접 대면하며 요구사항을 이야기하기 위해 사용자 스토리(User Story)를 활용할 수 있다.","기존의 방법론에 비해 실용성(Pragmatism)을 강조한 것이라고 볼 수있다."]
    },{
        "subject": "소프트웨어 설계",
        "question": "소프트웨어 설계에서 사용되는 대표적인 추상화(Abstraction) 기법이 아닌 것은?",
        "correct_answer": "강도 추상화",
        "incorrect_answers": ["자료 추상화","제어 추상화","과정 추상화"],
        "desc": "소프트웨어 설계에 사용되는 대표적인 3가지 추상화 기법<br>- 제어 추상화: 제어의 정확한 메커니즘을 정의하지 않고 원하는 효과를 정하는데 이용하는 방법<br>- 기능 추상화: 입력 자료를 출력자료로 변환하는 과정을 추상화하는 방법<br>- 자료 추상화: 자료와 자료에 적용될 수 있는 기능을 함께 정의함으로써 자료 객체를 구성하는 방법"
    },{
        "subject": "소프트웨어 설계",
        "question": "객체지향 설계에서 정보 은닉(Information Hiding)과 관련한 설명으로 틀린 것은?",
        "correct_answer": "모듈 내부의 자료 구조와 접근 동작들에만 수정을 국한하기 때문에 요구사항 등변화에 따른 수정이 불가능하다.",
        "incorrect_answers": ["필요하지 않은 정보는 접근할 수 없도록 하여 한 모듈 또는 하부시스템이 다른 모듈의 구현에 영향을 받지 않게 설계되는것을 의미한다.","모듈들 사이의 독립성을 유지시키는 데 도움이 된다.","설계에서 은닉되어야 할 기본 정보로는 IP주소와 같은 물리적 코드, 상세 데이터 구조 등이 있다."]
    },{
        "subject": "소프트웨어 설계",
        "question": "소프트웨어 공학에서 모델링 (Modeling)과 관련한 설명으로 틀린 것은?",
        "correct_answer": "유지보수 단계에서만 모델링 기법을 활용한다.",
        "incorrect_answers": ["개발팀이 응용문제를 이해하는 데 도움을 줄 수 있다.","개발될 시스템에 대하여 여러 분야의 엔지니어들이 공통된 개념을 공유하는 데 도움을 준다.","절차적인 프로그램을 위한 자료흐름도는 프로세스 위주의 모델링 방법이다"],
        "desc": "유지보수는 개발에 마지막 단계에서 작업한다."
    },{
        "subject": "소프트웨어 설계",
        "question": "요구 분석(Requirement Analysis)에 대한 설명으로 틀린 것은?",
        "correct_answer": "기능적(Functional) 요구에서 시스템 구축에 대한 성능, 보안, 품질, 안정 등에 대한 요구사항을 도출한다.",
        "incorrect_answers": ["요구 분석은 소프트웨어 개발의 실제적인 첫 단계로 사용자의 요구에 대해 이해하는 단계라 할 수 있다.","요구 추출(Requirement Elicitation)은 프로젝트 계획 단계에 정의한 문제의 범위 안에 있는 사용자의 요구를 찾는 단계이다.","도메인 분석(Domain Analysis)은 요구에 대한 정보를 수집하고 배경을 분석하여 이를 토대로 모델링을 하게된다."],
        "desc": "기능적 요구사항<br>- 시스템이 수행해야 하는 행위들을 구체화 한 것<br>- 시스템에서 제공해야 할 기능을 정의한 것<br>- 입력기능, 출력기능, 데이터베이스 기능, 통신 기능 등<br>비기능적 요구사항<br>- 시스템이 가져야 하는 기능 이외의 요구사항<br>- 시스템의 전체적인 품질이나 고려해야 하는 제약사항 등<br>- 사용 용이성, 효율성, 신뢰성, 이식성, 유연성, 확장성 등<br>- 성능적인 면: 응답 속도, 자원 사용량 등<br>- 보안 측면: 침입 대응, 침입 탐지, 사용자 인증, 권한 부여 등"
    },{
        "subject": "소프트웨어 설계",
        "question": "클래스 다이어그램의 요소로 다음 설명에 해당하는 용어는?<div class='qd'>- 클래스의 동작을 의미한다.<br>- 클래스에 속하는 객체에 대하여 적용될 메서드를 정의한 것이다.<br>- UML에서는 동작에 대한 인터페이스를 지칭한다고 볼 수 있다.</div>",
        "correct_answer": "Operation",
        "incorrect_answers": ["Instance","Hiding","Item"]
    },{
        "subject": "소프트웨어 설계",
        "question": "분산 시스템을 위한 마스터-슬레이브(Master-Slave) 아키텍처에 대한 설명으로 틀린 것은?",
        "correct_answer": "슬레이브 프로세스는 데이터 수집 기능을 수행할 수 없다",
        "incorrect_answers": ["일반적으로 실시간 시스템에서 사용된다.","마스터 프로세스는 일반적으로 연산, 통신, 조정을 책임진다.","마스터 프로세스는 슬레이브 프로세스들을 제어할 수 있다"]
    },{
        "subject": "소프트웨어 설계",
        "question": "요구 사항 정의 및 분석·설계의 결과물을 표현하기 위한 모델링 과정에서 사용되는 다이어그램(Diagram)이 아닌 것은?",
        "correct_answer": "AVL Diagram",
        "incorrect_answers": ["Data Flow Diagram","UML Diagram","E-R Diagram"]
    },{
        "subject": "소프트웨어 설계",
        "question": "객체지향의 주요 개념에 대한 설명으로 틀린 것은?",
        "correct_answer": "캡슐화는 상위클래스에서 속성이나 연산을 전달받아 새로운 형태의 클래스로 확장하여 사용하는 것을 의미 한다.",
        "incorrect_answers": ["객체는 실세계에 존재하거나 생각할 수 있는 것을 말한다","클래스는 하나 이상의 유사한 객체들을 묶어 공통된 특성을 표현한 것이다.","다형성은 상속받은 여러 개의 하위 객체들이 다른 형태의 특성을 갖는 객체로 이용될 수 있는 성질이다"],
        "desc": "상속에 관한 설명이다."
    },{
        "subject": "소프트웨어 설계",
        "question": "사용자 인터페이스(User Interface)에 대한 설명으로 틀린 것은?",
        "correct_answer": "편리한 유지보수를 위해 개발자 중심으로 설계되어야 한다",
        "incorrect_answers": ["사용자와 시스템이 정보를 주고받는 상호작용이 잘 이루어지도록 하는 장치나 소프트웨어를 의미한다","배우기가 용이하고 쉽게 사용할 수 있도록 만들어져야 한다","사용자 요구사항이 UI에 반영될 수 있도록 구성해야 한다"]
    },{
        "subject": "소프트웨어 설계",
        "question": "GoF(Gang of Four) 디자인 패턴과 관련한 설명으로 틀린 것은?",
        "correct_answer": "Strategy 패턴은 대표적인 구조 패턴으로 인스턴스를 복제하여 사용하는 구조를 말한다.",
        "incorrect_answers": ["디자인 패턴을 목적(Purpose)으로 분류할 때 생성, 구조, 행위로 분류할 수 있다.","행위 패턴은 클래스나 객체들이 상호작용하는 방법과 책임을 분산하는 방법을 정의한다","Singleton 패턴은 특정 클래스의 인스턴스가 오직 하나임을 보장하고, 이 인스턴스에 대한 접근 방법을 제공한다."],
        "desc": "Strategy는 행위 패턴에 속한다."
    },{
        "subject": "소프트웨어 설계",
        "question": "애자일 개발 방법론과 관련한 설명으로 틀린 것은?",
        "correct_answer": "정확한 결과 도출을 위해 계획 수립과 문서화에 중점을 둔다.",
        "incorrect_answers": ["빠른 릴리즈를 통해 문제점을 빠르게 파악할 수 있다.","고객과의 의사소통을 중요하게 생각한다","진화하는 요구사항을 수용하는데 적합하다."]
    },{
        "subject": "소프트웨어 설계",
        "question": "럼바우(Rumbaugh)의 객체지향 분석 기법 중 자료 흐름도(DFD)를 주로 이용하는 것은?",
        "correct_answer": "기능 모델링",
        "incorrect_answers": ["동적 모델링","객체 모델링","정적 모델링"]
    },{
        "subject": "소프트웨어 설계",
        "question": "순차 다이어그램(Sequence Diagram)과 관련한 설명으로 틀린 것은?",
        "correct_answer": "동적 다이어그램보다는 정적 다이어그램에 가깝다.",
        "incorrect_answers": ["객체들의 상호 작용을 나타내기 위해 사용한다.","시간의 흐름에 따라 객체들이 주고 받는 메시지의 전달 과정을 강조한다","교류 다이어그램(Interaction Diagram)의 한 종류로 볼 수 있다"],
        "desc": "순차 다이어그램은 동적 다이어그램에 속한다."
    },{
        "subject": "소프트웨어 설계",
        "question": "객체지향 분석 기법과 관련한 설명으로 틀린것은?",
        "correct_answer": "기능 중심으로 시스템을 파악하며 순차적인처리가 중요시되는 하향식(Top-down)방식으로 볼 수 있다",
        "incorrect_answers": ["동적 모델링 기법이 사용될 수 있다","데이터와 행위를 하나로 묶어 객체를 정의내리고 추상화시키는 작업이라 할 수 있다","코드 재사용에 의한 프로그램 생산성 향상 및 요구에 따른 시스템의 쉬운 변경이 가능하다."]
    },{
        "subject": "소프트웨어 설계",
        "question": "대표적으로 DOS 및 Unix 등의 운영체제에서 조작을 위해 사용하던 것으로, 정해진 명령문자열을 입력하여 시스템 조작하는 사용자인터페이스(User Interface)는?",
        "correct_answer": "CLI(Command Line Interface)",
        "incorrect_answers": ["GUI(Graphical User Interface)","CUI(Cell User Interface)","MUI(Mobile User Interface)"]
    },{
        "subject": "소프트웨어 설계",
        "question": "분산 시스템에서의 미들웨어 (Middleware)와 관련한 설명으로 틀린 것은?",
        "correct_answer": "애플리케이션과 사용자 사이에서만 분산서비스를 제공한다.",
        "incorrect_answers": ["분산 시스템에서 다양한 부분을 관리하고 통신하며 데이터를 교환하게 해주는 소프트웨어로 볼 수 있다","위치 투명성(Location Transparency)을 제공한다"," 분산 시스템의 여러 컴포넌트가 요구하는 재사용가능한 서비스의 구현을 제공한다."]
    },{
        "subject": "소프트웨어 설계",
        "question": "소프트웨어 아키텍처와 관련한 설명으로 틀린것은?",
        "correct_answer": "파이프 필터 아키텍처에서 데이터는 파이프를 통해 양방향으로 흐르며, 필터 이동 시 오버헤드가 발생하지 않는다.",
        "incorrect_answers": ["외부에서 인식할 수 있는 특성이 담긴 소프트웨어의 골격이 되는 기본 구조로 볼수 있다","데이터 중심 아키텍처는 공유 데이터저장소를 통해 접근자 간의 통신이 이루어지므로 각 접근자의 수정과 확장이 용이하다.","이해 관계자들의 품질 요구사항을 반영하여 품질 속성을 결정한다."]
    },
    {
        "subject": "소프트웨어 개발",
        "question": "테스트를 목적에 따라 분류했을 때, 강도(Stress) 테스트에 대한 설명으로 옳은것은?",
        "correct_answer": "시스템에 과다 정보량을 부과하여 과부하 시에도 시스템이 정상적으로 작동되는지를 테스트한다.",
        "incorrect_answers": ["시스템에 고의로 실패를 유도하고 시스템이정상적으로 복귀하는지 테스트한다","사용자의 이벤트에 시스템이 응답하는 시간, 특정 시간내에 처리하는 업무량, 사용자 요구에 시스템이 반응하는 속도 등을 테스트한다.","부당하고 불법적인 침입을 시도하여 보안시스템이 불법적인 침투를 잘 막아내는지 테스트한다."]
    },{
        "subject": "소프트웨어 개발",
        "question": "다음 자료를 버블 정렬을 이용하여오름차순으로 정렬할 경우 PASS 3의 결과는?<div class='qd'>9, 6, 7, 3, 5</div>",
        "correct_answer": "3, 5, 6, 7, 9",
        "incorrect_answers": ["6, 3, 5, 7, 9","6, 7, 3, 5, 9","3, 5, 9, 6, 7"],
        "desc": "버블 정렬(Bubble Sort): 인접한 데이터를 비교하면서 데이터의 위치를 바꾸어 정렬하는 방법<br>Pass 1: 6 7 3 5 9<br>Pass 2: 6 3 5 7 9<br>Pass 3: 3 5 6 7 9"
    },{
        "subject": "소프트웨어 개발",
        "question": "다음 그래프에서 정점 A를 선택하여 깊이우선탐색(DFS)으로 운행한 결과는?",
        "correct_answer": "ABEFGCD",
        "incorrect_answers": ["ABECDFG","ABECFDG","ABCDEFG"],
        "img": "gisa2021_03_01"
    },{
        "subject": "소프트웨어 개발",
        "question": "다음 설명에 부합하는 용어로 옳은 것은?<div class='qd'>- 소프트웨어 구조를 이루며, 다른 것들과 구별 될 수 있는 독립적인 기능을 갖는 단위이다.<br>- 하나 또는 몇 개의 논리적인 기능을 수행하기 위한 명령어들의 집합이라고도 할 수 있다.<br>- 서로 모여 하나의 완전한 프로그램으로 만들어 질 수 있다.</div>",
        "correct_answer": "모듈",
        "incorrect_answers": ["통합 프로그램","저장소","데이터"]
    },{
        "subject": "소프트웨어 개발",
        "question": "테스트 드라이버(Test Driver)에 대한 설명으로 틀린 것은?",
        "correct_answer": "테스트 대상 모듈이 호출하는 하위 모듈의 역할을 한다.",
        "incorrect_answers": ["시험대상 모듈을 호출하는 간이 소프트웨어이다.","필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여줄 수 있다.","상향식 통합 테스트에서 사용된다."],
        "desc": "테스트 대상 모듈이 호출하는 하위 모듈의 역할은 테스트 스텁(Stub)이다."
    },{
        "subject": "소프트웨어 개발",
        "question": "다음 중 선형 구조로만 묶인 것은?",
        "correct_answer": "큐, 데크",
        "incorrect_answers": ["스택, 트리","큐, 그래프","리스트, 그래프"],
        "desc": "선형구조: 리스트, 스택, 큐, 덱<br>비선형구조: 트리, 그래프<br>파일구조: 순차파일, 색인파일, 직접파일"
    },{
        "subject": "소프트웨어 개발",
        "question": "다음은 스택의 자료 삭제 알고리즘이다. ⓐ에 들어 갈 내용으로 옳은 것은? (단, Top: 스택포인터, S: 스택의 이름)",
        "correct_answer": "Underflow",
        "incorrect_answers": ["Overflow","Top = Top + 1"," Top = Top"],
        "desc": "Overflow(오버플로우) : 스택 공간이 가득찼을 때 하나의 데이터를 더 넣으려고 하는 경우, 스택 오버플로우가 일어나고 프로그램에 오류 야기<br>Underflow(언더플로우) : 스택 공간에 데이터가 없는데 프로그램에서 스택에서 데이터를 꺼내려고 하는 경우, 스택 언더플로우가 일어나며 프로그램에 오류를 야기",
        "img": "gisa2021_03_02"
    },{
        "subject": "소프트웨어 개발",
        "question": "제품 소프트웨어의 사용자 매뉴얼 작성절차로 (가)~(다)와 [보기]의 기호를 바르게 연결한 것은?",
        "correct_answer": "(가)-㉢, (나)-㉡, (다)-㉠",
        "incorrect_answers": ["(가)-㉠, (나)-㉡, (다)-㉢","(가)-㉠, (나)-㉢, (다)-㉡","(가)-㉢, (나)-㉠, (다)-㉡"],
        "img": "gisa2021_03_03"
    },{
        "subject": "소프트웨어 개발",
        "question": "순서가 A, B, C, D로 정해진 입력 자료를 스택에 입력한 후 출력한 결과로 불가능한 것은?",
        "correct_answer": "D, B, C, A",
        "incorrect_answers": ["D, C, B, A","B, C, D, A","C, B, A, D"],
        "desc": "D, C, B, A : A push - B push - C push - D push - D pop - C pop - B pop - A pop<br>B, C, D, A : A push - B push - B pop - C push - C pop - D push - D pop - A pop<br>C, B, A, D : A push - B push - C push - C pop - B pop - A pop - D push - D pop"
    },{
        "subject": "소프트웨어 개발",
        "question": "소프트웨어 테스트에서 검증(Verification)과 확인(Validation)에 대한 설명으로 틀린 것은?",
        "correct_answer": "검증은 작업 제품이 사용자의 요구에 적합한지 측정하며, 확인은 작업 제품이 개발자의 기대를 충족시키는지를 측정한다",
        "incorrect_answers": ["소프트웨어 테스트에서 검증과 확인을 구별하면 찾고자 하는 결함 유형을 명확하게 하는 데 도움이 된다","검증은 소프트웨어 개발 과정을 테스트하는 것이고, 확인은 소프트웨어 결과를 테스트 하는 것이다","검증은 작업 제품이 요구 명세의 기능, 비기능 요구사항을 얼마나 잘 준수하는지 측정하는 작업이다"],
        "desc": "검증(Verification): 소프트웨어가 요구사항에 부합하게 구현되었음을 보장하는 활동<br>확인(Validation): 소프트웨어가 고객의 의도에 따라 구현되었음을 보장하는 활동"
    },{
        "subject": "소프트웨어 개발",
        "question": "개별 모듈을 시험하는 것으로 모듈이 정확하게 구현되었는지, 예정한 기능이 제대로 수행되는지를 점검하는 것이 주요 목적인 테스트는?",
        "correct_answer": "단위 테스트(Unit Test)",
        "incorrect_answers": ["통합 테스트(Integration Test)","시스템 테스트(System Test)","인수 테스트(Acceptance Test)"]
    },{
        "subject": "소프트웨어 개발",
        "question": "형상 관리의 개념과 절차에 대한 설명으로 틀린 것은?",
        "correct_answer": "형상 통제 과정에서는 형상 목록의 변경 요구를 즉시 수용 및 반영해야 한다",
        "incorrect_answers": ["형상 식별은 형상 관리 계획을 근거로 형상관리의 대상이 무엇인지 식별하는 과정이다.","형상 관리를 통해 가시성과 추적성을 보장함으로써 소프트웨어의 생산성과 품질을 높일 수 있다.","형상 감사는 형상 관리 계획대로 형상관리가 진행되고 있는지, 형상 항목의 변경이 요구 사항에 맞도록 제대로 이뤄졌는지 등을 살펴보는 활동이다"]
    },{
        "subject": "소프트웨어 개발",
        "question": "소스코드 정적 분석(Static Analysis)에 대한 설명으로 틀린 것은?",
        "correct_answer": "하드웨어적인 방법으로만 코드 분석이 가능하다.",
        "incorrect_answers": ["소스 코드를 실행시키지 않고 분석한다.","코드에 있는 오류나 잠재적인 오류를 찾아내기 위한 활동이다","자료 흐름이나 논리 흐름을 분석하여 비정상적인 패턴을 찾을 수 있다"],
        "desc": "소스코드 정적 분석은 프로그램을 실행 시키지 않고 코드를 분석하는 방법이며, 코드 내에 존재하는 보안 취약점, 잠재적 결함, 위험 등을 발견하고 규칙과 흐름에 맞게 코드가 올바르게 작성되어 있는지 점검하는 것이다."
    },{
        "subject": "소프트웨어 개발",
        "question": "소프트웨어 개발 활동을 수행함에 있어서 시스템이 고장(Failure)을 일으키게 하며, 오류(Error)가 있는 경우 발생하는 것은?",
        "correct_answer": "Fault",
        "incorrect_answers": ["Testcase","Mistake","Inspection"],
        "desc": "오류(Error) : 결함의 원인이 되는 것으로, 일반적으로 휴먼 에러에 의해 생성되는 실수<br>결함(Defect), 결점(Fault), 버그(Bug) : 오류가 원인이 되어 제품에 포함되는 완전하지 못한 부분<br>실패(Failure), 문제(Problem) : 결함에 의해 의도하지 않은 결과가 발생하는 것"
    },{
        "subject": "소프트웨어 개발",
        "question": "코드의 간결성을 유지하기 위해 사용되는 지침으로 틀린 것은?",
        "correct_answer": "한 줄에 최대한 많은 문장을 코딩한다.",
        "incorrect_answers": ["공백을 이용하여 실행문 그룹과 주석을 명확히 구분한다","복잡한 논리식과 산술식은 괄호와 들여쓰기(Indentation)를 통해 명확히 표현한다.","빈 줄을 사용하여 선언부와 구현부를 구별한다"]
    },{
        "subject": "소프트웨어 개발",
        "question": "소프트웨어 품질 목표 중 하나 이상의 하드웨어 환경에서 운용되기 위해 쉽게 수정될 수 있는 시스템 능력을 의미하는 것은?",
        "correct_answer": "Portability",
        "incorrect_answers": ["Efficiency","Usability","Correctness"],
        "desc": "이식성(Portability): 다양한 하드웨어 환경에서도 운용 가능 하도록 쉽게 수정될 수 있는 능력<br>효율성(Efficiency): 최소의 작업으로 요구되는 기능을 수행하는 정도<br>사용 용이성(Usability): 소프트웨어를 쉽게 사용할 수 있는 정도<br>정확성(Correctness): 사용자의 요구사항을 충족시키는 정도"
    },{
        "subject": "소프트웨어 개발",
        "question": "다음 중 최악의 경우 검색 효율이 가장 나쁜트리 구조는?",
        "correct_answer": "이진 탐색트리",
        "incorrect_answers": ["AVL 트리","2-3 트리","레드-블랙 트리"],
        "desc": "이진 탐색 트리의 시간 복잡도는 O(logN), 최악의 시간복잡도는 O(N)이다."
    },{
        "subject": "소프트웨어 개발",
        "question": "다음 트리에 대한 중위 순회 운행 결과는?",
        "correct_answer": "DBAECF",
        "incorrect_answers": ["ABDCEF","ABCDEF","DBECFA"],
        "img": "gisa2021_03_04"
    },{
        "subject": "소프트웨어 개발",
        "question": "테스트 케이스 자동 생성 도구를 이용하여 테스트 데이터를 찾아내는 방법이 아닌 것은?",
        "correct_answer": "스터브(Stub)와 드라이버(Driver)",
        "incorrect_answers": ["입력 도메인 분석","랜덤(Random) 테스트","자료 흐름도"],
        "desc": "스터브(Stub)와 드라이버(Driver)는 상향식/하향식 테스트를 위한 모듈이다."
    },{
        "subject": "소프트웨어 개발",
        "question": "저작권 관리 구성 요소 중 패키저(Packager)의 주요 역할로 옳은 것은?",
        "correct_answer": "콘텐츠를 메타 데이터와 함께 배포 가능한 단위로 묶는다",
        "incorrect_answers": ["콘텐츠를 제공하는 저작권자를 의미한다.","라이선스를 발급하고 관리한다.","배포된 콘텐츠의 이용 권한을 통제한다."]
    },{
        "subject": "데이터베이스 구축",
        "question": "데이터베이스의 무결성 규정(Integrity Rule)과 관련한 설명으로 틀린 것은?",
        "correct_answer": " 정식으로 허가 받은 사용자가 아닌 불법적인 사용자에 의한 갱신으로부터 데이터베이스를 보호하기 위한 규정이다.",
        "incorrect_answers": ["무결성 규정에는 데이터가 만족해야 될 제약 조건, 규정을 참조할 때 사용하는 식별자 등의 요소가 포함될 수 있다.","무결성 규정의 대상으로는 도메인, 키, 종속성 등이 있다.","릴레이션 무결성 규정(Relation Integrity Rules)은 릴레이 션을 조작하는 과정에서의 의미적 관계(Semantic Relationship)을 명세한 것이다."]
    },{
        "subject": "데이터베이스 구축",
        "question": "데이터베이스에서 하나의 논리적 기능을 수행하기 위한 작업의 단위 또는 한꺼번에 모두 수행되어야 할 일련의 연산들을 의미하는 것은?",
        "correct_answer": "",
        "incorrect_answers": ["","",""]
    },{
        "subject": "데이터베이스 구축",
        "question": "",
        "correct_answer": "",
        "incorrect_answers": ["","",""]
    },{
        "subject": "데이터베이스 구축",
        "question": "",
        "correct_answer": "",
        "incorrect_answers": ["","",""]
    },{
        "subject": "데이터베이스 구축",
        "question": "",
        "correct_answer": "",
        "incorrect_answers": ["","",""]
    },{
        "subject": "데이터베이스 구축",
        "question": "",
        "correct_answer": "",
        "incorrect_answers": ["","",""]
    },{
        "subject": "데이터베이스 구축",
        "question": "",
        "correct_answer": "",
        "incorrect_answers": ["","",""]
    },{
        "subject": "데이터베이스 구축",
        "question": "",
        "correct_answer": "",
        "incorrect_answers": ["","",""]
    },{
        "subject": "데이터베이스 구축",
        "question": "",
        "correct_answer": "",
        "incorrect_answers": ["","",""]
    },{
        "subject": "데이터베이스 구축",
        "question": "",
        "correct_answer": "",
        "incorrect_answers": ["","",""]
    },{
        "subject": "데이터베이스 구축",
        "question": "",
        "correct_answer": "",
        "incorrect_answers": ["","",""]
    },{
        "subject": "데이터베이스 구축",
        "question": "",
        "correct_answer": "",
        "incorrect_answers": ["","",""]
    },{
        "subject": "데이터베이스 구축",
        "question": "",
        "correct_answer": "",
        "incorrect_answers": ["","",""]
    },{
        "subject": "데이터베이스 구축",
        "question": "",
        "correct_answer": "",
        "incorrect_answers": ["","",""]
    },{
        "subject": "데이터베이스 구축",
        "question": "",
        "correct_answer": "",
        "incorrect_answers": ["","",""]
    },{
        "subject": "데이터베이스 구축",
        "question": "",
        "correct_answer": "",
        "incorrect_answers": ["","",""]
    },{
        "subject": "데이터베이스 구축",
        "question": "",
        "correct_answer": "",
        "incorrect_answers": ["","",""]
    },{
        "subject": "데이터베이스 구축",
        "question": "",
        "correct_answer": "",
        "incorrect_answers": ["","",""]
    },{
        "subject": "데이터베이스 구축",
        "question": "",
        "correct_answer": "",
        "incorrect_answers": ["","",""]
    },{
        "subject": "데이터베이스 구축",
        "question": "",
        "correct_answer": "",
        "incorrect_answers": ["","",""]
    }
]